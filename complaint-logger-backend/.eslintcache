[{"C:\\React\\complaint-logger\\src\\index.js":"1","C:\\React\\complaint-logger\\src\\components\\ViewAllComplaintsComponent.js":"2","C:\\React\\complaint-logger\\src\\service\\ComplaintDataService.js":"3","C:\\React\\complaint-logger\\src\\App.js":"4","C:\\React\\complaint-logger\\src\\components\\Complaints.js":"5","C:\\React\\complaint-logger\\src\\components\\AddComplaintComponent.js":"6","C:\\React\\complaint-logger\\src\\components\\UpdateComplaintComponent.js":"7"},{"size":182,"mtime":1611246796273,"results":"8","hashOfConfig":"9"},{"size":4248,"mtime":1611250876298,"results":"10","hashOfConfig":"9"},{"size":1164,"mtime":1610716519853,"results":"11","hashOfConfig":"9"},{"size":287,"mtime":1610700432137,"results":"12","hashOfConfig":"9"},{"size":1026,"mtime":1610728406272,"results":"13","hashOfConfig":"9"},{"size":4637,"mtime":1611251142974,"results":"14","hashOfConfig":"9"},{"size":6905,"mtime":1611251048606,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1t90pmt",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"18"},"C:\\React\\complaint-logger\\src\\index.js",[],["34","35"],"C:\\React\\complaint-logger\\src\\components\\ViewAllComplaintsComponent.js",[],"C:\\React\\complaint-logger\\src\\service\\ComplaintDataService.js",[],["36","37"],"C:\\React\\complaint-logger\\src\\App.js",[],"C:\\React\\complaint-logger\\src\\components\\Complaints.js",[],"C:\\React\\complaint-logger\\src\\components\\AddComplaintComponent.js",["38"],"import React, { Component } from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport ComplaintDataService from \"../service/ComplaintDataService\";\r\n\r\nclass AddComplaintComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            complaintID : '',\r\n            userName : '',\r\n            date : '',\r\n            deviceType : '',\r\n            location : '',\r\n            complaint : '',\r\n            message : ''\r\n        }\r\n\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"Inside AddComplaintComponent componentDidMount \")\r\n        return;\r\n\r\n    //     ComplaintDataService.retrieveComplaint(this.state.complaintID)\r\n    //     .then(\r\n    //       response => {\r\n    //           console.log(\"BYE\" + response);\r\n    //           this.setState({ userName: response.data.userName })\r\n    //       }\r\n    //   )\r\n    }\r\n\r\n    onSubmit(values) {\r\n        console.log('On submit' + values.userName)\r\n        let complaint = {\r\n            userName : values.userName,\r\n            date : values.date,\r\n            location : values.location,\r\n            deviceType : values.deviceType,\r\n            complaint : values.complaint,\r\n            systemLog : values.systemLog\r\n        }\r\n        //this.props.history.push(`/show`)\r\n        ComplaintDataService.addComplaint(complaint)\r\n            .then(\r\n                response => {\r\n                  this.setState({message : response.data.message})\r\n                }\r\n            )\r\n            .then(() => this.props.history.push('/showAll'))\r\n      }\r\n\r\n    render() {\r\n    \r\n        let { userName, date, location, deviceType, complaint, systemLog } = this.state\r\n        return (\r\n          <div>\r\n              <center><h3>Complaint Details</h3></center>\r\n              {this.state.message && <div className=\"alert alert-success\">{this.state.message}</div>}\r\n              <div className=\"container\">\r\n                  <Formik\r\n                    initialValues={{ userName, date, location, deviceType, complaint, systemLog }}\r\n                    onSubmit={this.onSubmit}\r\n                //   validateOnChange={false}\r\n                //   validateOnBlur={false}\r\n                //   validate={this.validate}\r\n                    enableReinitialize={true}\r\n                  >\r\n                      {\r\n                          (props) => (\r\n                              <Form>\r\n                                  <fieldset className=\"form-group\">\r\n                                      <label>Username : </label>\r\n                                      <Field className=\"form-control\" type=\"text\" name=\"userName\"  />\r\n                                  </fieldset>\r\n                                  <fieldset className=\"form-group\">\r\n                                      <label>Date : </label>\r\n                                      <Field className=\"form-control\" type=\"date\" name=\"date\"  />\r\n                                  </fieldset>\r\n                                  <fieldset className=\"form-group\">\r\n                                      <label>Location : </label>\r\n                                      <Field className=\"form-control\" type=\"text\" name=\"location\"  />\r\n                                  </fieldset>\r\n                                  <fieldset className=\"form-group\">\r\n                                      <label>Device Type :</label>\r\n                                      <Field className=\"form-control\" type=\"text\" name=\"deviceType\" />\r\n                                  </fieldset>\r\n                                  <fieldset className=\"form-group\">\r\n                                      <label>Complaint : </label>\r\n                                      <Field className=\"form-control\" type=\"text\" name=\"complaint\"  />\r\n                                  </fieldset>\r\n                                  <fieldset className=\"form-group\">\r\n                                      <label>System Logs : </label>\r\n                                      <Field className=\"form-control\" type=\"text-area\" name=\"systemLog\"  />\r\n                                  </fieldset>\r\n                                  <div className = 'text-center'>\r\n                                  <button className=\"btn btn-secondary\" type=\"submit\">Add Complaint</button>\r\n                                  </div>\r\n                              </Form>\r\n                          )\r\n                      }\r\n                  </Formik>\r\n  \r\n              </div>\r\n          </div>\r\n      )\r\n  }\r\n}\r\n\r\nexport default AddComplaintComponent","C:\\React\\complaint-logger\\src\\components\\UpdateComplaintComponent.js",["39","40","41"],"import React, { Component } from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport ComplaintDataService from \"../service/ComplaintDataService\";\r\n\r\nclass UpdateComplaintComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            complaintID: this.props.match.params.complaintID,\r\n            userName : '',\r\n            date : '',\r\n            deviceType : '',\r\n            location : '',\r\n            complaint : '',\r\n            systemLog : '',\r\n            resolution : '',\r\n            status : '',\r\n            validateResolution : ''\r\n        }\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.validate = this.validate.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"Hi \" + this.state.complaintID)\r\n\r\n        // eslint-disable-next-line\r\n        if (this.state.complaintID == -1) {\r\n            return\r\n        }\r\n        ComplaintDataService.retrieveComplaint(this.state.complaintID)\r\n        .then(\r\n          response => {\r\n              this.setState(\r\n                  { userName: response.data.userName, \r\n                    date : response.data.date,\r\n                    location : response.data.location,\r\n                    deviceType : response.data.deviceType,\r\n                    complaint : response.data.complaint,\r\n                    systemLog : response.data.systemLog\r\n                })\r\n          }\r\n        )\r\n\r\n        console.log(\"HELLOS \" + this.state.userName);\r\n        //this.updateComplaintClicked();\r\n    }\r\n\r\n    validate(values) {\r\n        \r\n        if (!values.resolution) {\r\n            this.state.validateResolution = 'Resolution is mandatory'\r\n        } else if (values.resolution.length < 5) {\r\n            this.state.validateResolution = 'Resolution should be atleast 5 characters'\r\n        }\r\n        console.log(values.resolution + ' ' + this.state.validateResolution);\r\n        return this.state.validateResolution\r\n    }\r\n\r\n    onSubmit(values) {\r\n        let complaint = {\r\n            complaintID: this.state.complaintID,\r\n            userName: values.userName, \r\n            date : values.date,\r\n            location : values.location,\r\n            deviceType : values.deviceType,\r\n            complaint : values.complaint,\r\n            systemLog : values.systemLog,\r\n            resolution : values.resolution,\r\n            status : values.status\r\n        }\r\n\r\n        \r\n        ComplaintDataService.updateComplaint(complaint)\r\n                .then(() => this.props.history.push('/showAll'))\r\n\r\n        console.log(\"SUBMIT \" +values);\r\n    }\r\n\r\n    render() {\r\n      let {complaintID, userName, deviceType, location, date, complaint, systemLog} = this.state;\r\n\r\n      return (\r\n          <div>\r\n              <center><h3>Complaint Details</h3></center>\r\n              <br/>\r\n              <div className=\"container\">\r\n                  <Formik\r\n                        initialValues={{ complaintID, userName, deviceType, location, date, complaint, systemLog }}\r\n                        onSubmit={this.onSubmit}\r\n                        validateOnChange={false}\r\n                        validateOnBlur={false}\r\n                        validate={this.validate}\r\n                        enableReinitialize={true}\r\n                      >\r\n                      {\r\n                          (props, errors) => (\r\n                              <Form>\r\n                                  {this.state.validateResolution && <div className=\"alert alert-warning\">{this.state.validateResolution}</div>}\r\n                                  <fieldset className=\"form-group\">\r\n                                      <label>Complaint ID : </label>\r\n                                      <Field className=\"form-control\" type=\"text\" name=\"complaintID\" disabled />\r\n                                  </fieldset>\r\n                                  <fieldset className=\"form-group\">\r\n                                      <label>Username : </label>\r\n                                      <Field className=\"form-control\" type=\"text\" name=\"userName\" disabled/>\r\n                                  </fieldset>\r\n                                  <fieldset className=\"form-group\">\r\n                                      <label>Date : </label>\r\n                                      <Field className=\"form-control\" type=\"text\" name=\"date\"  disabled/>\r\n                                  </fieldset>\r\n                                  <fieldset className=\"form-group\">\r\n                                      <label>Location : </label>\r\n                                      <Field className=\"form-control\" type=\"text\" name=\"location\" disabled />\r\n                                  </fieldset>\r\n                                  <fieldset className=\"form-group\">\r\n                                      <label>Device Type :</label>\r\n                                      <Field className=\"form-control\" type=\"text\" name=\"deviceType\" disabled/>\r\n                                  </fieldset>\r\n                                  <fieldset className=\"form-group\">\r\n                                      <label>Complaint : </label>\r\n                                      <Field className=\"form-control\" type=\"text\" name=\"complaint\"  disabled/>\r\n                                  </fieldset>\r\n                                  <fieldset className=\"form-group\">\r\n                                      <label>System Logs : </label>\r\n                                      <Field className=\"form-control\" type=\"text\" name=\"systemLog\" disabled />\r\n                                  </fieldset>\r\n                                  <fieldset className=\"form-group\">\r\n                                      <label>Resolution : </label>\r\n                                      <Field className=\"form-control\" type=\"text\" name=\"resolution\"  />\r\n                                  </fieldset>\r\n                                  <fieldset className=\"form-group\">\r\n                                      <label>Status : </label>\r\n                                      <Field className=\"form-control\" component=\"select\" name=\"status\">\r\n                                            <option value=\"active\">ACTIVE</option>\r\n                                            <option value=\"resolved\">RESOLVED</option>\r\n                                      </Field>\r\n                                  </fieldset>\r\n                                  <div className = 'text-center'>\r\n                                      <button className=\"btn btn-secondary\" type=\"submit\">Update Complaint</button>\r\n                                  </div>\r\n                                  \r\n                              </Form>\r\n                          )\r\n                      }\r\n                  </Formik>\r\n  \r\n              </div>\r\n          </div>\r\n      )\r\n  }\r\n}\r\n\r\nexport default UpdateComplaintComponent",{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"42","replacedBy":"46"},{"ruleId":"44","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":2,"column":31,"nodeType":"50","messageId":"51","endLine":2,"endColumn":43},{"ruleId":"48","severity":1,"message":"49","line":2,"column":31,"nodeType":"50","messageId":"51","endLine":2,"endColumn":43},{"ruleId":"52","severity":1,"message":"53","line":52,"column":13,"nodeType":"54","endLine":52,"endColumn":23},{"ruleId":"52","severity":1,"message":"53","line":54,"column":13,"nodeType":"54","endLine":54,"endColumn":23},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],["55"],["56"],"no-unused-vars","'ErrorMessage' is defined but never used.","Identifier","unusedVar","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-global-assign","no-unsafe-negation"]